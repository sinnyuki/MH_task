qgraph(input = l_mgm_cond[[g]]$pairwise$wadj,
edge.color = l_mgm_cond[[g]]$pairwise$edgecolor_cb,
lty = l_mgm_cond[[g]]$pairwise$edge_lty,
layout = "circle", mar = c(2, 3, 5, 3),
maximum = max(v_max), vsize = 5, esize = 10,
edge.labels  = TRUE, edge.label.cex = 3)
mtext(text = paste0("Group ", g), line = 2.5)
}
c8<-par(mfrow=c(1, 2)) %>%
for(g in 1:2) {
qgraph(input = l_mgm_cond[[g]]$pairwise$wadj,
edge.color = l_mgm_cond[[g]]$pairwise$edgecolor_cb,
lty = l_mgm_cond[[g]]$pairwise$edge_lty,
layout = "circle", mar = c(2, 3, 5, 3),
maximum = max(v_max), vsize = 5, esize = 10,
edge.labels  = TRUE, edge.label.cex = 3)
mtext(text = paste0("Group ", g), line = 2.5)
}
res_obj <- resample(object = mgm_obj,
data = net_comp,
nB = 50,
pbar = FALSE)
plotRes(res_obj)
View(res_obj)
res_obj$bootParameters
x<-res_obj$bootParameters
x<-res_obj$bootQuantiles
x<-res_obj$call
View(x)
x<-res_obj$call$data
View(x)
x<-res_obj$models
View(x)
#Network moderator effect
res_obj <- mgm::resample(object = mgm_obj,
data = net_comp,
nB = 50,
pbar = FALSE)
x <- res_obj$bootParameters
x <- res_obj$bootQuantiles
plot(res_obj$bootQuantiles)
plot(res_obj$bootQuantiles)
plot(res_obj$bootQuantiles)
plotRes(res_obj)
###############################library packages#############################
#base
#install.packages('tidyverse')
#install.packages('bruceR')
library('tidyverse')
library('bruceR')
#plot
#install.packages('ggplot2')
library('ggplot2')
#font
#install.packages('viridisLite')
#install.packages('viridis')
library('viridisLite')
library('viridis')
#pdf_chinese
#install.packages('showtext')
#install.packages('Cairo')
#install.packages('sysfonts')
#install.packages('showtextdb')
library('sysfonts')
library('showtextdb')
library('showtext')
library('Cairo')
#set working path
setwd("C:/Users/hmz19/Desktop/Mental Health/task/task11/OUTPUT")
#open matrix
dataplot = bruceR::import("C:\\Users\\hmz19\\Desktop\\Mental Health\\task\\task11\\data\\depression_matrix_a_0.xlsx")  #Load data for plot (difference between specific and compound symptoms)
n_scal = 26
#set working path
setwd("C:/Users/hmz19/Desktop/Mental Health/task/task11/OUTPUT")
#open matrix
dataplot = bruceR::import("C:\\Users\\hmz19\\Desktop\\Mental Health\\task\\task11\\data\\depression_matrix_a_0.xlsx")  #Load data for plot (difference between specific and compound symptoms)
n_scal = 26
n_symp = 95
matrixA_plot <- function(dataplot,n_scal,n_symp){
set.seed(223)
d <- dataplot %>%
dplyr::select(.,-S_name) %>%
dplyr::mutate(.,S = paste(1:nrow(dataplot),sep = "")) %>%
melt(., id.vars="S", variable.name="Scales", value.name="Type") %>%
dplyr::filter(.,Type >= 1) %>%
dplyr::mutate(.,Type = ifelse(Type==1,"Scale contains compound symptom","Scale contains specific symptom")) %>%
dplyr::mutate(.,S=as.numeric(S))
symp <- dataplot %>%
dplyr::mutate(.,S=1:nrow(.)) %>%
dplyr::mutate(S_name = factor(S_name,levels = .$S_name))  %>%
dplyr::select(S,S_name)
#levels(symp$S_name)
num = d %>%
dplyr::mutate(n=1) %>%
dplyr::group_by(Scales) %>%
dplyr::summarise(.,count = sum(n)) %>%
dplyr::ungroup() %>%
dplyr::arrange(.,desc(count)) %>%
dplyr::mutate(order=1:nrow(.))
plot = dplyr::full_join(num, d, by = "Scales") %>%
dplyr::mutate(Scales2=order) %>%
dplyr::mutate(Scales = factor(Scales,levels = num$Scales))  %>%
dplyr::mutate(S = factor(S,levels = symp$S,labels = symp$S_name))  %>%
dplyr::select(S,Scales,Scales2,Type)
#levels(plot$Scales)
# Plot
#pal1 <- c("#DB6968", "#F8984E", "#4D97CD", "#D4D66D", "#60BC55", "#88C4E8", "#FCBC7E")
pal2 <- viridis(n_scal,option = "H")
#pal3 <- c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628")
showtext::showtext.auto(enable = T)
font_add(family = "songti",regular = "C:/Windows/Fonts/simsun.ttc")
#add font = songti, otherwise, the Chinese cannot be displayed in pdf
a<- ggplot(plot, aes(x=S, y=Scales2, group=S, color=Scales, shape=Type, rev=F)) +
geom_line() + #keep this here, otherwise there is an error
xlab("") +
ylab("") +
# Generate the grid lines
geom_hline(yintercept = 1:n_scal, colour = "grey80", size = .2) +
geom_vline(xintercept = 1:n_symp, colour = "grey80", size = .2) +
# Points and lines
geom_line(colour="grey60") +
geom_point(size=3, fill="white") +
# Fill the middle space with a white blank rectangle
geom_rect(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=.6,fill="white", color=NA) +
# Polar coordinates
#circle or not
#coord_polar() +
scale_shape_manual(values=c(21,19)) +
# The angle for the symptoms and remove the default grid lines
theme(axis.text.x = element_text(angle=90, hjust=1),
axis.text.y = element_text(angle=120, hjust=1),
panel.border = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
legend.position="right",
plot.margin = unit(rep(.5,4), "lines"),
text = element_text(family="songti")) +
labs(fill="") + # remove legend title
scale_y_continuous(limits=c(0,n_scal), expand=c(0,0), breaks=1:n_scal, labels=levels(plot$Scales))+
scale_color_manual(values=pal2);
a
ggsave(plot=a,filename="Figure1.pdf", width = 25, height = 15)
# Figure 1 was further adjusted in Inkscape
return()
}
matrixA_plot <- function(dataplot,n_scal,n_symp){
set.seed(223)
d <- dataplot %>%
dplyr::select(.,-S_name) %>%
dplyr::mutate(.,S = paste(1:nrow(dataplot),sep = "")) %>%
melt(., id.vars="S", variable.name="Scales", value.name="Type") %>%
dplyr::filter(.,Type >= 1) %>%
dplyr::mutate(.,Type = ifelse(Type==1,"Scale contains compound symptom","Scale contains specific symptom")) %>%
dplyr::mutate(.,S=as.numeric(S))
symp <- dataplot %>%
dplyr::mutate(.,S=1:nrow(.)) %>%
dplyr::mutate(S_name = factor(S_name,levels = .$S_name))  %>%
dplyr::select(S,S_name)
#levels(symp$S_name)
num = d %>%
dplyr::mutate(n=1) %>%
dplyr::group_by(Scales) %>%
dplyr::summarise(.,count = sum(n)) %>%
dplyr::ungroup() %>%
dplyr::arrange(.,desc(count)) %>%
dplyr::mutate(order=1:nrow(.))
plot = dplyr::full_join(num, d, by = "Scales") %>%
dplyr::mutate(Scales2=order) %>%
dplyr::mutate(Scales = factor(Scales,levels = num$Scales))  %>%
dplyr::mutate(S = factor(S,levels = symp$S,labels = symp$S_name))  %>%
dplyr::select(S,Scales,Scales2,Type)
#levels(plot$Scales)
# Plot
#pal1 <- c("#DB6968", "#F8984E", "#4D97CD", "#D4D66D", "#60BC55", "#88C4E8", "#FCBC7E")
pal2 <- viridis(n_scal,option = "H")
#pal3 <- c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628")
showtext::showtext.auto(enable = T)
font_add(family = "songti",regular = "C:/Windows/Fonts/simsun.ttc")
#add font = songti, otherwise, the Chinese cannot be displayed in pdf
a<- ggplot(plot, aes(x=S, y=Scales2, group=S, color=Scales, shape=Type, rev=F)) +
geom_line() + #keep this here, otherwise there is an error
xlab("") +
ylab("") +
# Generate the grid lines
geom_hline(yintercept = 1:n_scal, colour = "grey80", size = .2) +
geom_vline(xintercept = 1:n_symp, colour = "grey80", size = .2) +
# Points and lines
geom_line(colour="grey60") +
geom_point(size=3, fill="white") +
# Fill the middle space with a white blank rectangle
geom_rect(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=.6,fill="white", color=NA) +
# Polar coordinates
#circle or not
#coord_polar() +
scale_shape_manual(values=c(21,19)) +
# The angle for the symptoms and remove the default grid lines
theme(axis.text.x = element_text(angle=90, hjust=1),
axis.text.y = element_text(angle=120, hjust=1),
panel.border = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
legend.position="right",
plot.margin = unit(rep(.5,4), "lines"),
text = element_text(family="songti")) +
labs(fill="") + # remove legend title
scale_y_continuous(limits=c(0,n_scal), expand=c(0,0), breaks=1:n_scal, labels=levels(plot$Scales))+
scale_color_manual(values=pal2);
a
ggsave(plot=a,filename="Figure1.pdf", width = 25, height = 15)
# Figure 1 was further adjusted in Inkscape
return()
}
matrixA_plot <- function(dataplot,n_scal,n_symp){
set.seed(223)
d <- dataplot %>%
dplyr::select(.,-S_name) %>%
dplyr::mutate(.,S = paste(1:nrow(dataplot),sep = "")) %>%
melt(., id.vars="S", variable.name="Scales", value.name="Type") %>%
dplyr::filter(.,Type >= 1) %>%
dplyr::mutate(.,Type = ifelse(Type==1,"Scale contains compound symptom","Scale contains specific symptom")) %>%
dplyr::mutate(.,S=as.numeric(S))
symp <- dataplot %>%
dplyr::mutate(.,S=1:nrow(.)) %>%
dplyr::mutate(S_name = factor(S_name,levels = .$S_name))  %>%
dplyr::select(S,S_name)
#levels(symp$S_name)
num = d %>%
dplyr::mutate(n=1) %>%
dplyr::group_by(Scales) %>%
dplyr::summarise(.,count = sum(n)) %>%
dplyr::ungroup() %>%
dplyr::arrange(.,desc(count)) %>%
dplyr::mutate(order=1:nrow(.))
plot = dplyr::full_join(num, d, by = "Scales") %>%
dplyr::mutate(Scales2=order) %>%
dplyr::mutate(Scales = factor(Scales,levels = num$Scales))  %>%
dplyr::mutate(S = factor(S,levels = symp$S,labels = symp$S_name))  %>%
dplyr::select(S,Scales,Scales2,Type)
#levels(plot$Scales)
# Plot
#pal1 <- c("#DB6968", "#F8984E", "#4D97CD", "#D4D66D", "#60BC55", "#88C4E8", "#FCBC7E")
pal2 <- viridis(n_scal,option = "H")
#pal3 <- c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628")
showtext::showtext.auto(enable = T)
font_add(family = "songti",regular = "C:/Windows/Fonts/simsun.ttc")
#add font = songti, otherwise, the Chinese cannot be displayed in pdf
a<- ggplot(plot, aes(x=S, y=Scales2, group=S, color=Scales, shape=Type, rev=F)) +
geom_line() + #keep this here, otherwise there is an error
xlab("") +
ylab("") +
# Generate the grid lines
geom_hline(yintercept = 1:n_scal, colour = "grey80", size = .2) +
geom_vline(xintercept = 1:n_symp, colour = "grey80", size = .2) +
# Points and lines
geom_line(colour="grey60") +
geom_point(size=3, fill="white") +
# Fill the middle space with a white blank rectangle
geom_rect(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=.6,fill="white", color=NA) +
# Polar coordinates
#circle or not
#coord_polar() +
scale_shape_manual(values=c(21,19)) +
# The angle for the symptoms and remove the default grid lines
theme(axis.text.x = element_text(angle=90, hjust=1),
axis.text.y = element_text(angle=120, hjust=1),
panel.border = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
legend.position="right",
plot.margin = unit(rep(.5,4), "lines"),
text = element_text(family="songti")) +
labs(fill="") + # remove legend title
scale_y_continuous(limits=c(0,n_scal), expand=c(0,0), breaks=1:n_scal, labels=levels(plot$Scales))+
scale_color_manual(values=pal2);
ggsave(plot=a,filename="Figure1.pdf", width = 25, height = 15)
# Figure 1 was further adjusted in Inkscape
return(a)
}
matrixA_plot(dataplot,n_scal,n_symp)
#set working path
setwd("C:/Users/hmz19/Desktop/Mental Health/task/task11/OUTPUT")
#open matrix
dataplot = bruceR::import("C:\\Users\\hmz19\\Desktop\\Mental Health\\task\\task11\\data\\depression_matrix_a_0.xlsx")  #Load data for plot (difference between specific and compound symptoms)
n_scal = 26
n_symp = 95
matrixA_plot <- function(dataplot,n_scal,n_symp){
set.seed(223)
d <- dataplot %>%
dplyr::select(.,-S_name) %>%
dplyr::mutate(.,S = paste(1:nrow(dataplot),sep = "")) %>%
melt(., id.vars="S", variable.name="Scales", value.name="Type") %>%
dplyr::filter(.,Type >= 1) %>%
dplyr::mutate(.,Type = ifelse(Type==1,"Scale contains compound symptom","Scale contains specific symptom")) %>%
dplyr::mutate(.,S=as.numeric(S))
symp <- dataplot %>%
dplyr::mutate(.,S=1:nrow(.)) %>%
dplyr::mutate(S_name = factor(S_name,levels = .$S_name))  %>%
dplyr::select(S,S_name)
#levels(symp$S_name)
num = d %>%
dplyr::mutate(n=1) %>%
dplyr::group_by(Scales) %>%
dplyr::summarise(.,count = sum(n)) %>%
dplyr::ungroup() %>%
dplyr::arrange(.,desc(count)) %>%
dplyr::mutate(order=1:nrow(.))
plot = dplyr::full_join(num, d, by = "Scales") %>%
dplyr::mutate(Scales2=order) %>%
dplyr::mutate(Scales = factor(Scales,levels = num$Scales))  %>%
dplyr::mutate(S = factor(S,levels = symp$S,labels = symp$S_name))  %>%
dplyr::select(S,Scales,Scales2,Type)
#levels(plot$Scales)
# Plot
pal_rb<- viridis(n_scal,option = "H")
#font setting
showtext::showtext.auto(enable = T)
font_add(family = "songti",regular = "C:/Windows/Fonts/simsun.ttc")
#add font = songti, otherwise, the Chinese cannot be displayed in pdf
a<- ggplot(plot, aes(x=S, y=Scales2, group=S, color=Scales, shape=Type, rev=F)) +
geom_line() + #keep this here, otherwise there is an error
xlab("") +
ylab("") +
# Generate the grid lines
geom_hline(yintercept = 1:n_scal, colour = "grey80", size = .2) +
geom_vline(xintercept = 1:n_symp, colour = "grey80", size = .2) +
# Points and lines
geom_line(colour="grey60") +
geom_point(size=3, fill="white") +
# Fill the middle space with a white blank rectangle
geom_rect(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=.6,fill="white", color=NA) +
# Polar coordinates
#circle or not
#coord_polar() +
scale_shape_manual(values=c(21,19)) +
# The angle for the symptoms and remove the default grid lines
theme(axis.text.x = element_text(angle=90, hjust=1),
axis.text.y = element_text(angle=120, hjust=1),
panel.border = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
legend.position="right",
plot.margin = unit(rep(.5,4), "lines"),
text = element_text(family="songti")) +
labs(fill="") + # remove legend title
scale_y_continuous(limits=c(0,n_scal), expand=c(0,0), breaks=1:n_scal, labels=levels(plot$Scales))+
scale_color_manual(values=pal_rb);
ggsave(plot=a,filename="Figure1.pdf", width = 25, height = 15)
# Figure 1 was further adjusted in Inkscape
return(a)
}
matrixA_plot(dataplot,n_scal,n_symp)
matrixA_plot(dataplot,n_scal,n_symp)
##############################create function ##############################
#######################click 2 times and get your graph#####################
matrixA_plot <- function(dataplot,n_scal,n_symp){
set.seed(223)
d <- dataplot %>%
dplyr::select(.,-S_name) %>%
dplyr::mutate(.,S = paste(1:nrow(dataplot),sep = "")) %>%
melt(., id.vars="S", variable.name="Scales", value.name="Type") %>%
dplyr::filter(.,Type >= 1) %>%
dplyr::mutate(.,Type = ifelse(Type==1,"Scale contains compound symptom","Scale contains specific symptom")) %>%
dplyr::mutate(.,S=as.numeric(S))
symp <- dataplot %>%
dplyr::mutate(.,S=1:nrow(.)) %>%
dplyr::mutate(S_name = factor(S_name,levels = .$S_name))  %>%
dplyr::select(S,S_name)
#levels(symp$S_name)
num = d %>%
dplyr::mutate(n=1) %>%
dplyr::group_by(Scales) %>%
dplyr::summarise(.,count = sum(n)) %>%
dplyr::ungroup() %>%
dplyr::arrange(.,desc(count)) %>%
dplyr::mutate(order=1:nrow(.))
plot = dplyr::full_join(num, d, by = "Scales") %>%
dplyr::mutate(Scales2=order) %>%
dplyr::mutate(Scales = factor(Scales,levels = num$Scales))  %>%
dplyr::mutate(S = factor(S,levels = symp$S,labels = symp$S_name))  %>%
dplyr::select(S,Scales,Scales2,Type)
#levels(plot$Scales)
# Plot
pal_rb<- viridis(n_scal,option = "H")
#font setting
showtext::showtext.auto(enable = T)
font_add(family = "songti",regular = "C:/Windows/Fonts/simsun.ttc")
#add font = songti, otherwise, the Chinese cannot be displayed in pdf
a<- ggplot(plot, aes(x=S, y=Scales2, group=S, color=Scales, shape=Type, rev=F)) +
geom_line() + #keep this here, otherwise there is an error
xlab("") +
ylab("") +
# Generate the grid lines
geom_hline(yintercept = 1:n_scal, colour = "grey80", size = .2) +
geom_vline(xintercept = 1:n_symp, colour = "grey80", size = .2) +
# Points and lines
geom_line(colour="grey60") +
geom_point(size=3, fill="white") +
# Fill the middle space with a white blank rectangle
geom_rect(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=.6,fill="white", color=NA) +
# Polar coordinates
#circle or not
#coord_polar() +
scale_shape_manual(values=c(21,19)) +
# The angle for the symptoms and remove the default grid lines
theme(axis.text.x = element_text(angle=90, hjust=1),
axis.text.y = element_text(angle=120, hjust=1),
panel.border = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
legend.position="right",
plot.margin = unit(rep(.5,4), "lines"),
text = element_text(family="songti")) +
labs(fill="") + # remove legend title
scale_y_continuous(limits=c(0,n_scal), expand=c(0,0), breaks=1:n_scal, labels=levels(plot$Scales))+
scale_color_manual(values=pal_rb);
ggsave(plot=a,filename="Figure1.pdf", width = 25, height = 15)
# Figure 1 was further adjusted in Inkscape
return(a)
}
matrixA_plot(dataplot,n_scal,n_symp)
matrixA_plot(dataplot = dataplot,
n_scal = n_scal,
n_symp = n_symp)
#set working path
setwd("C:/Users/hmz19/Desktop/Mental Health/task/task11/OUTPUT")
#open matrix
rawdata = bruceR::import("C:\\Users\\hmz19\\Desktop\\Mental Health\\task\\task11\\data\\depression_matrix_a_0.xlsx")  #Load data for plot (difference between specific and compound symptoms)
#setting the number of scales and symptoms
n_scales = 26 #number of scales
n_symptoms = 95 #number of symptoms
##############################create function ##############################
#######################click 2 times and get your graph#####################
matrixA_plot <- function(dataplot,n_scal,n_symp){
set.seed(223)
d <- dataplot %>%
dplyr::select(.,-S_name) %>%
dplyr::mutate(.,S = paste(1:nrow(dataplot),sep = "")) %>%
melt(., id.vars="S", variable.name="Scales", value.name="Type") %>%
dplyr::filter(.,Type >= 1) %>%
dplyr::mutate(.,Type = ifelse(Type==1,"Scale contains compound symptom","Scale contains specific symptom")) %>%
dplyr::mutate(.,S=as.numeric(S))
symp <- dataplot %>%
dplyr::mutate(.,S=1:nrow(.)) %>%
dplyr::mutate(S_name = factor(S_name,levels = .$S_name))  %>%
dplyr::select(S,S_name)
#levels(symp$S_name)
num = d %>%
dplyr::mutate(n=1) %>%
dplyr::group_by(Scales) %>%
dplyr::summarise(.,count = sum(n)) %>%
dplyr::ungroup() %>%
dplyr::arrange(.,desc(count)) %>%
dplyr::mutate(order=1:nrow(.))
plot = dplyr::full_join(num, d, by = "Scales") %>%
dplyr::mutate(Scales2=order) %>%
dplyr::mutate(Scales = factor(Scales,levels = num$Scales))  %>%
dplyr::mutate(S = factor(S,levels = symp$S,labels = symp$S_name))  %>%
dplyr::select(S,Scales,Scales2,Type)
#levels(plot$Scales)
# Plot
pal_rb<- viridis(n_scal,option = "H")
#font setting
showtext::showtext.auto(enable = T)
font_add(family = "songti",regular = "C:/Windows/Fonts/simsun.ttc")
#add font = songti, otherwise, the Chinese cannot be displayed in pdf
a<- ggplot(plot, aes(x=S, y=Scales2, group=S, color=Scales, shape=Type, rev=F)) +
geom_line() + #keep this here, otherwise there is an error
xlab("") +
ylab("") +
# Generate the grid lines
geom_hline(yintercept = 1:n_scal, colour = "grey80", size = .2) +
geom_vline(xintercept = 1:n_symp, colour = "grey80", size = .2) +
# Points and lines
geom_line(colour="grey60") +
geom_point(size=3, fill="white") +
# Fill the middle space with a white blank rectangle
geom_rect(xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=.6,fill="white", color=NA) +
# Polar coordinates
#circle or not
#coord_polar() +
scale_shape_manual(values=c(21,19)) +
# The angle for the symptoms and remove the default grid lines
theme(axis.text.x = element_text(angle=90, hjust=1),
axis.text.y = element_text(angle=120, hjust=1),
panel.border = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
legend.position="right",
plot.margin = unit(rep(.5,4), "lines"),
text = element_text(family="songti")) +
labs(fill="") + # remove legend title
scale_y_continuous(limits=c(0,n_scal), expand=c(0,0), breaks=1:n_scal, labels=levels(plot$Scales))+
scale_color_manual(values=pal_rb);
ggsave(plot=a,filename="Figure1.pdf", width = 25, height = 15)
# Figure 1 was further adjusted in Inkscape
return(a)
}
matrixA_plot(dataplot = rawdata,
n_scal = n_scales,
n_symp = n_symptoms)
